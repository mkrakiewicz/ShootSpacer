#!/bin/sh

MESSAGE=$(git log -1 HEAD --pretty=format:%s)
HASH=$(git log -1 HEAD --pretty=format:%h)
PRO_PATH=`git rev-parse --show-toplevel`"/src/include/version"

VER_TOCKEN="const core::stringw VERSION"
VER_STR=$(grep "^$VER_TOCKEN" $PRO_PATH | head -1| tr -d '"' | awk '{print $5}')

VER_MAJ=$(echo $VER_STR | awk -F. '{print $1}')
VER_MIN=$(echo $VER_STR | awk -F. '{print $2}')
VER_PAT=$(echo $VER_STR | awk -F. '{print $3}')

applyVersion()
{
  VER_STR=$VER_MAJ"."$VER_MIN"."$VER_PAT
  VER_LINE=$VER_TOCKEN" = \""$VER_STR"\" ;"
 # sed -i 's/^'"$VER_TOCKEN"'.*/'"$VER_LINE"'/' $PRO_PATH
  echo "$VER_LINE" > $PRO_PATH
  echo "const core::stringw VERSION_HASH = \"$HASH\";" >> $PRO_PATH
  git add $PRO_PATH
  git commit -m "version update: "$VER_STR
}

onVMAJ()
{
  let VER_MAJ++
  VER_MIN=0
  VER_PAT=0
  applyVersion
}

onVMIN()
{
  let VER_MIN++
  VER_PAT=0
  applyVersion
}

onVPAT()
{
  let VER_PAT++
  applyVersion
}

case "$MESSAGE" in
  *vmaj++* ) onVMAJ;;
  *vmin++* ) onVMIN;;
  *vpat++* ) onVPAT;;
  * );;
esac

exit